package messagerie.back;

import static com.rethinkdb.RethinkDB.r;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.rethinkdb.net.Connection;
import com.rethinkdb.net.Result;

import controller.Config;
import entities.User;

@RestController
@RequestMapping("/user")
public class UserController {
	
	public static final ObjectMapper MAPPER = new ObjectMapper();
	private Config config;
	private Connection connect;
	
	public UserController() {
		try {
			this.config = MAPPER.readValue(new File("./config.json"), Config.class);
			
		} catch (IOException e) {
			e.printStackTrace();
			throw new RuntimeException(e);
		};
		this.connect = r.connection().hostname(this.config.dbHost).port(this.config.dbPort).connect();
	}
	
	@RequestMapping("/")
	@ResponseBody
	public String index() {
		return "hello world";
	}
	
	@GetMapping("/all")
	public List<Object> getAllUser() {
		Result<List<User>> allUsers = r.db(this.config.dbName).table(this.config.table1).run(this.connect, User.class);
		return allUsers.toList();
	}
	
	@PostMapping("/{id}")
	public User getUserById(@RequestParam String id) {
		Result<User> user = r.db(this.config.dbName).table(this.config.table1).get(id).run(this.connect, User.class);
		return user.next();
	}
}
